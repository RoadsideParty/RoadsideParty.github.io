import{_ as a,c as e,ag as s,o}from"./chunks/framework.DB9ukh8c.js";const _=JSON.parse('{"title":"css","description":"","frontmatter":{},"headers":[],"relativePath":"css/index.md","filePath":"css/index.md","lastUpdated":1747619267000}'),n={name:"css/index.md"};function i(r,t,c,h,l,d){return o(),e("div",null,t[0]||(t[0]=[s('<h1 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h1><h2 id="css-selector" tabindex="-1">css selector <a class="header-anchor" href="#css-selector" aria-label="Permalink to &quot;css selector&quot;">​</a></h2><h3 id="nth-child" tabindex="-1">:nth-child <a class="header-anchor" href="#nth-child" aria-label="Permalink to &quot;:nth-child&quot;">​</a></h3><p>选择父元素下满足条件的第 n 个子元素，无论子元素类型，若不满足条件则不匹配</p><h3 id="nth-of-type" tabindex="-1">:nth-of-type <a class="header-anchor" href="#nth-of-type" aria-label="Permalink to &quot;:nth-of-type&quot;">​</a></h3><p>选择父元素下满足条件的第 n 个子元素，不同子元素类型（如：div，span，p...）<strong>分别计数</strong>，若不满足条件则不匹配</p><h2 id="position" tabindex="-1">position <a class="header-anchor" href="#position" aria-label="Permalink to &quot;position&quot;">​</a></h2><p>若取值为 sticky，需满足两个条件，父节点具有滚动机制且父节点高度必须大于 sticky 节点高度+top+bottom，否则效果等同于 relative</p>',8)]))}const f=a(n,[["render",i]]);export{_ as __pageData,f as default};
