import{_ as s,c as a,ag as t,o as n}from"./chunks/framework.DB9ukh8c.js";const g=JSON.parse('{"title":"other","description":"","frontmatter":{},"headers":[],"relativePath":"other/index.md","filePath":"other/index.md","lastUpdated":1747390339000}'),l={name:"other/index.md"};function h(e,i,k,p,r,o){return n(),a("div",null,i[0]||(i[0]=[t(`<h1 id="other" tabindex="-1">other <a class="header-anchor" href="#other" aria-label="Permalink to &quot;other&quot;">​</a></h1><h2 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-label="Permalink to &quot;package.json&quot;">​</a></h2><h3 id="版本控制符" tabindex="-1">版本控制符 <a class="header-anchor" href="#版本控制符" aria-label="Permalink to &quot;版本控制符&quot;">​</a></h3><ul><li>^：兼容当前主版本，允许安装最新的次版本和补丁版本。</li><li>~：兼容当前次版本，允许安装最新的补丁版本。</li><li>没有符号：锁定特定版本。</li><li>*：安装任何版本。</li><li>范围符号（&gt;=, &lt;=, &lt;, &gt;）：指定版本的范围。</li><li>latest：安装最新版本。</li><li>next：安装下一个预发布版本。</li></ul><h2 id="git" tabindex="-1">git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;git&quot;">​</a></h2><h3 id="设置代理" tabindex="-1">设置代理 <a class="header-anchor" href="#设置代理" aria-label="Permalink to &quot;设置代理&quot;">​</a></h3><p>如果代理端口是:7897</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 开启代理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--global] http.proxy 127.0.0.1:7897</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--global] https.proxy 127.0.0.1:7897</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 关闭代理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--global] --unset http.proxy 127.0.0.1:7897</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--global] --unset https.proxy 127.0.0.1:7897</span></span></code></pre></div><h2 id="go" tabindex="-1">go <a class="header-anchor" href="#go" aria-label="Permalink to &quot;go&quot;">​</a></h2><h3 id="gin" tabindex="-1">gin <a class="header-anchor" href="#gin" aria-label="Permalink to &quot;gin&quot;">​</a></h3><h4 id="自定义校验" tabindex="-1">自定义校验 <a class="header-anchor" href="#自定义校验" aria-label="Permalink to &quot;自定义校验&quot;">​</a></h4><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 定义</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v, ok </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> binding.Validator.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Engine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); ok {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  v.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RegisterValidation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;customize-tag&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fl</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> validator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FieldLevel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`form:&quot;name&quot; binding:&quot;customize-tag&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Age  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`form:&quot;age&quot; binding:&quot;gte=18&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="关于刷机" tabindex="-1">关于刷机 <a class="header-anchor" href="#关于刷机" aria-label="Permalink to &quot;关于刷机&quot;">​</a></h2><h3 id="常规流程" tabindex="-1">常规流程 <a class="header-anchor" href="#常规流程" aria-label="Permalink to &quot;常规流程&quot;">​</a></h3><ul><li>1.解锁 bl(具体解法根据机型而定),可以使用 onekey twrp(如果有的话)一键解锁 bl 以及刷入 rec</li><li>2.刷第三方 rec(具体版本根据机型而定),如果是 onekey twrp 一键解锁的,现在已经是 twrp 的 rec,可以直接获取 root 权限,如果要刷 rom 或者 magisk 之类的,可能会失败,还是依据机型而定</li><li>3.刷第三方 rom(具体 rom 根据机型而定)</li><li>4.安装 <a href="https://github.com/topjohnwu/Magisk" target="_blank" rel="noreferrer">magisk</a><ul><li>4.1 其中一种方式是将 magisk.app 后缀改为.zip 即可在 rec 中卡刷安装,如果安装后重启没有出现 magisk app,需手动安装对应版本的 magisk app 即可</li><li>4.2 另一种方式是通过 magisk app 安装,然后修补 boot.img 或者 init_boot.img</li></ul></li><li>5.安装 <a href="https://github.com/LSPosed/LSPosed" target="_blank" rel="noreferrer">lsposed</a>,在 magisk 中启动 zygisk 即可安装 lsposed-zygisk 的版本</li><li>6.安装 lsp 模块,每一个模块都是一个 app,直接安装即可,安装后在 lsp 中启用,有些模块可能需要重启后生效</li></ul>`,15)]))}const E=s(l,[["render",h]]);export{g as __pageData,E as default};
