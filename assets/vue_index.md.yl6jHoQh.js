import{_ as i,c as t,ag as a,o as n}from"./chunks/framework.DB9ukh8c.js";const E=JSON.parse('{"title":"vue","description":"","frontmatter":{},"headers":[],"relativePath":"vue/index.md","filePath":"vue/index.md","lastUpdated":1747619267000}'),e={name:"vue/index.md"};function l(h,s,p,d,k,r){return n(),t("div",null,s[0]||(s[0]=[a(`<h1 id="vue" tabindex="-1">vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;vue&quot;">​</a></h1><h2 id="transition" tabindex="-1">transition <a class="header-anchor" href="#transition" aria-label="Permalink to &quot;transition&quot;">​</a></h2><table tabindex="0"><thead><tr><th>类名</th><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td><code>v-enter-from</code>（常用）</td><td>进入前</td><td>元素插入前的初始状态（如 opacity: 0）</td></tr><tr><td><code>v-enter-active</code>（常用）</td><td>进入中</td><td>控制进入动画的持续时间、缓动函数等</td></tr><tr><td>v-enter-to</td><td>进入后</td><td>元素完全显示时的状态（如 opacity: 1）</td></tr><tr><td>v-leave-from</td><td>离开前</td><td>元素离开前的初始状态（如 opacity: 1）</td></tr><tr><td><code>v-leave-active</code>（常用）</td><td>离开中</td><td>控制离开动画的持续时间、缓动函数等</td></tr><tr><td><code>v-leave-to</code>（常用）</td><td>离开后</td><td>元素完全隐藏时的状态（如 opacity: 0）</td></tr></tbody></table><p>使用</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 可选 使用name会改变v前缀 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">transition</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fade&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;isShow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;test&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.fade-enter-active</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.fade-leave-active</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: opacity </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.fade-enter-from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.fade-leave-to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>当没有显式定义 v-enter-to 或 v-leave-from 时，Vue 会默认使用元素的原始样式作为过渡的结束状态</p><p><strong>为什么这样设计？​​</strong></p><ul><li>简化代码 ​​：大多数情况下，开发者只需定义起始或结束状态中的一个，另一个状态由元素原始样式决定</li><li>灵活性 ​​：允许通过修改元素本身的 CSS 来控制过渡效果，而无需重复定义过渡类名</li></ul><p><a href="https://cn.vuejs.org/guide/built-ins/transition" target="_blank" rel="noreferrer">更多配置详见</a></p>`,10)]))}const c=i(e,[["render",l]]);export{E as __pageData,c as default};
