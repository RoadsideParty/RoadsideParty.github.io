import{_ as a,c as i,a3 as t,o as e}from"./chunks/framework.DtMx7FFi.js";const c=JSON.parse('{"title":"vite","description":"","frontmatter":{},"headers":[],"relativePath":"vite/index.md","filePath":"vite/index.md","lastUpdated":1740714523000}'),n={name:"vite/index.md"};function p(l,s,h,r,o,d){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="vite" tabindex="-1">vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;vite&quot;">​</a></h1><h2 id="代理配置" tabindex="-1">代理配置 <a class="header-anchor" href="#代理配置" aria-label="Permalink to &quot;代理配置&quot;">​</a></h2><p>本地请求地址 <code>http://localhost:8080/getInfo</code></p><p>接口地址 <code>http://localhost:3001/getInfo</code></p><p>简单写法如下:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">proxy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;/getInfo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        target: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:3001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        changeOrigin: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p><a href="https://cn.vitejs.dev/config/server-options.html#server-proxy" target="_blank" rel="noreferrer">更多代理配置</a></p>`,7)]))}const E=a(n,[["render",p]]);export{c as __pageData,E as default};
